{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","newState","toConsumableArray","concat","newContact","map","payload","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","console","log","_this2","_this$props$contact","name","email","phone","className","onClick","prevState","style","cursor","float","color","delete","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onInputChange","e","defineProperty","target","onFormSubmit","preventDefault","_this$state","trim","post","then","history","push","onSubmit","layout_TextInputGroup","EditContact","match","params","abrupt","put","Header","branding","href","About","NotFound","Test","title","body","fetch","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2TAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOO,OAErE,IAAK,cACH,IAAMC,EAAQN,OAAAC,EAAA,EAAAD,CAAA,GAAQH,GAEtB,OADAS,EAASJ,SAATF,OAAAO,EAAA,EAAAP,CAAwBM,EAASJ,UAAjCM,OAAA,CAA2CV,EAAOW,aAC3CH,EACT,IAAK,iBACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASQ,IAAI,SAAAN,GAAO,OAClCA,EAAQC,KAAOP,EAAOa,QAAQN,GAAKP,EAAOa,QAAUP,MAG1D,QACE,OAAOP,IAIAe,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAiB,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAf,OAAAwB,EAAA,EAAAxB,CAAAiB,MAAAH,EAAAd,OAAAyB,EAAA,EAAAzB,CAAAY,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAT,OAAAa,MACExB,MAAQ,CACNK,SAAU,GACV0B,SAAU,SAAA9B,GAAM,OAAIiB,EAAKc,SAAS,SAAAhC,GAAK,OAAID,EAAQC,EAAOC,OAH9DiB,EAAA,OAAAf,OAAA8B,EAAA,EAAA9B,CAAAY,EAAAC,GAAAb,OAAA+B,EAAA,EAAA/B,CAAAY,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAOsBC,IAAMC,IAAI,8CAPhC,OAOUN,EAPVE,EAAAK,KASI9B,KAAKY,SAAS,CAAE3B,SAAUsC,EAAIQ,OATlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAmBI,OACEiB,EAAAb,EAAAc,cAAC1D,EAAQmB,SAAT,CAAkBqB,MAAOhB,KAAKpB,OAC3BoB,KAAKmC,MAAMC,cArBpBzC,EAAA,CAA8B0C,aA2BjBC,EAAW9D,EAAQ8D,SCiBjBC,6MAjEb3D,MAAQ,CAAE4D,iBAAiB,KAE3BC,cAAgB,WACdC,QAAQC,IAAI,qFAGL,IAAAC,EAAA5C,KAAA6C,EAC4B7C,KAAKmC,MAAMhD,QAAtCC,EADDyD,EACCzD,GAAI0D,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACzB,OACEf,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAK,OACJiB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,uBACbhB,EAAAb,EAAAc,cAAA,UACGY,EAAM,IACPb,EAAAb,EAAAc,cAAA,KACEgB,QAAS,kBACPN,EAAKhC,SAAS,SAAAuC,GAAS,MAAK,CAC1BX,iBAAkBW,EAAUX,oBAGhCS,UAAU,mBACVG,MAAO,CAAEC,OAAQ,aAEnBpB,EAAAb,EAAAc,cAAA,KACEe,UAAU,eACVG,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDL,QAAOnE,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,KAAE,SAAAC,IAAA,OAAAH,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,IAAM4B,OAAN,8CAAAjE,OAC0CH,IAFzC,OAIP4B,EAAML,SAAS,CAAE7B,KAAM,iBAAkBM,OAJlC,wBAAAqC,EAAAO,SAAAV,EAAAtB,WAYXiC,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAE,gBAAAnE,OAAkBH,IACxB6C,EAAAb,EAAAc,cAAA,KACEe,UAAU,oBACVG,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAKpBf,EAAKhE,MAAM4D,iBACVP,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCF,GACxCd,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCD,cAtDlCX,aCiBPuB,mLAjBX,OACE3B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAK,OACJiB,EAAAb,EAAAc,cAACD,EAAAb,EAAMyC,SAAP,KACE5B,EAAAb,EAAAc,cAAA,MAAIe,UAAU,kBACZhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,YADF,QAGCjC,EAAM/B,SAASQ,IAAI,SAAAN,GAAO,OACzB8C,EAAAb,EAAAc,cAAC4B,EAAD,CAAS/C,IAAK5B,EAAQC,GAAID,QAASA,gBAV1BkD,sCCAjB0B,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAnB,EAMIkB,EANJlB,KACA9B,EAKIgD,EALJhD,MACAkD,EAIIF,EAJJE,YACApF,EAGIkF,EAHJlF,KACAqF,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEnC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,cACbhB,EAAAb,EAAAc,cAAA,SAAOmC,QAASvB,GAAOmB,GACvBhC,EAAAb,EAAAc,cAAA,SACEpD,KAAMA,EACNgE,KAAMA,EACNoB,YAAaA,EACbjB,UAAWqB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBpD,MAAOA,EACPmD,SAAUA,IAEXC,GAASnC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,oBAAoBmB,KAKnDL,EAAeS,aAAe,CAAE1F,KAAM,QAWvBiF,QCkDAU,6MAtFb7F,MAAQ,CACNkE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0B,OAAQ,MAGVC,cAAgB,SAAAC,GAAC,OAAI9E,EAAKc,SAAL7B,OAAA8F,EAAA,EAAA9F,CAAA,GAAiB6F,EAAEE,OAAOhC,KAAO8B,EAAEE,OAAO9D,WAE/D+D,aAAe,SAACH,EAAG5D,GACjB4D,EAAEI,iBADyB,IAAAC,EAEInF,EAAKlB,MAA5BkE,EAFmBmC,EAEnBnC,KAAMC,EAFakC,EAEblC,MAAOC,EAFMiC,EAENjC,MAED,KAAhBF,EAAKoC,OAKY,KAAjBnC,EAAMmC,OAKW,KAAjBlC,EAAMkC,QAKVtD,IACGuD,KAAK,6CAA8C,CAAErC,OAAMC,QAAOC,UAClEoC,KAAK,SAAA7D,GAAG,OACPP,EAAML,SAAS,CAAE7B,KAAM,cAAeU,WAAY+B,EAAIQ,SAG1DjC,EAAKc,SAAS,CAAEkC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAI0B,OAAQ,KAExD5E,EAAKqC,MAAMkD,QAAQC,KAAK,MAZtBxF,EAAKc,SAAS,CAAE8D,OAAQ,CAAE1B,MAAO,uBALjClD,EAAKc,SAAS,CAAE8D,OAAQ,CAAE3B,MAAO,uBALjCjD,EAAKc,SAAS,CAAE8D,OAAQ,CAAE5B,KAAM,+FAyB3B,IAAAF,EAAA5C,KACP,OACEiC,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAK,OACJiB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,eACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAMqD,SAAU,SAAAX,GAAC,OAAIhC,EAAKmC,aAAaH,EAAG5D,KACxCiB,EAAAb,EAAAc,cAACsD,EAAD,CACEvB,MAAM,OACNnB,KAAK,OACLoB,YAAY,aACZlD,MAAO4B,EAAKhE,MAAMkE,KAClBqB,SAAUvB,EAAK+B,cACfP,MAAOxB,EAAKhE,MAAM8F,OAAO5B,OAE3Bb,EAAAb,EAAAc,cAACsD,EAAD,CACEvB,MAAM,QACNnB,KAAK,QACLhE,KAAK,QACLoF,YAAY,cACZlD,MAAO4B,EAAKhE,MAAMmE,MAClBoB,SAAUvB,EAAK+B,cACfP,MAAOxB,EAAKhE,MAAM8F,OAAO3B,QAE3Bd,EAAAb,EAAAc,cAACsD,EAAD,CACEvB,MAAM,QACNnB,KAAK,QACLoB,YAAY,cACZlD,MAAO4B,EAAKhE,MAAMoE,MAClBmB,SAAUvB,EAAK+B,cACfP,MAAOxB,EAAKhE,MAAM8F,OAAO1B,QAE3Bf,EAAAb,EAAAc,cAAA,SACEpD,KAAK,SACLkC,MAAM,cACNiC,UAAU,8BA5EHZ,aCmGVoD,6MAlGb7G,MAAQ,CACNkE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0B,OAAQ,MAaVC,cAAgB,SAAAC,GAAC,OAAI9E,EAAKc,SAAL7B,OAAA8F,EAAA,EAAA9F,CAAA,GAAiB6F,EAAEE,OAAOhC,KAAO8B,EAAEE,OAAO9D,WAE/D+D,mDAAe,SAAAzD,EAAOsD,EAAG5D,GAAV,IAAAiE,EAAAnC,EAAAC,EAAAC,EAAA5D,EAAAmC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACbiD,EAAEI,iBADWC,EAEkBnF,EAAKlB,MAA5BkE,EAFKmC,EAELnC,KAAMC,EAFDkC,EAEClC,MAAOC,EAFRiC,EAEQjC,MACb5D,EAAOU,EAAKqC,MAAMuD,MAAMC,OAAxBvG,GAEY,KAAhB0D,EAAKoC,OALI,CAAAzD,EAAAE,KAAA,eAMX7B,EAAKc,SAAS,CAAE8D,OAAQ,CAAE5B,KAAM,sBANrBrB,EAAAmE,OAAA,oBAUQ,KAAjB7C,EAAMmC,OAVG,CAAAzD,EAAAE,KAAA,eAWX7B,EAAKc,SAAS,CAAE8D,OAAQ,CAAE3B,MAAO,uBAXtBtB,EAAAmE,OAAA,oBAeQ,KAAjB5C,EAAMkC,OAfG,CAAAzD,EAAAE,KAAA,gBAgBX7B,EAAKc,SAAS,CAAE8D,OAAQ,CAAE1B,MAAO,uBAhBtBvB,EAAAmE,OAAA,yBAAAnE,EAAAE,KAAA,GAoBKC,IAAMiE,IAAN,8CAAAtG,OAC8BH,GAC9C,CAAE0D,OAAMC,QAAOC,UAtBJ,QAoBPzB,EApBOE,EAAAK,KAyBbd,EAAML,SAAS,CAAE7B,KAAM,iBAAkBY,QAAS6B,EAAIQ,OAEtDjC,EAAKc,SAAS,CAAEkC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAI0B,OAAQ,KAExD5E,EAAKqC,MAAMkD,QAAQC,KAAK,KA7BX,yBAAA7D,EAAAO,SAAAV,EAAAtB,mRAXLZ,EAAOY,KAAKmC,MAAMuD,MAAMC,OAAxBvG,YACUwC,IAAMC,IAAN,8CAAAtC,OAC8BH,WAD1CmC,SAGNmB,QAAQC,IAAIpB,KACmBA,EAAIQ,KAA3Be,SAAMC,UAAOC,UACrBhD,KAAKY,SAAS,CAAEkC,OAAMC,QAAOC,6IAqCtB,IAAAJ,EAAA5C,KACP,OACEiC,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAK,OACJiB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,gBACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAMqD,SAAU,SAAAX,GAAC,OAAIhC,EAAKmC,aAAaH,EAAG5D,KACxCiB,EAAAb,EAAAc,cAACsD,EAAD,CACEvB,MAAM,OACNnB,KAAK,OACLoB,YAAY,aACZlD,MAAO4B,EAAKhE,MAAMkE,KAClBqB,SAAUvB,EAAK+B,cACfP,MAAOxB,EAAKhE,MAAM8F,OAAO5B,OAE3Bb,EAAAb,EAAAc,cAACsD,EAAD,CACEvB,MAAM,QACNnB,KAAK,QACLhE,KAAK,QACLoF,YAAY,cACZlD,MAAO4B,EAAKhE,MAAMmE,MAClBoB,SAAUvB,EAAK+B,cACfP,MAAOxB,EAAKhE,MAAM8F,OAAO3B,QAE3Bd,EAAAb,EAAAc,cAACsD,EAAD,CACEvB,MAAM,QACNnB,KAAK,QACLoB,YAAY,cACZlD,MAAO4B,EAAKhE,MAAMoE,MAClBmB,SAAUvB,EAAK+B,cACfP,MAAOxB,EAAKhE,MAAM8F,OAAO1B,QAE3Bf,EAAAb,EAAAc,cAAA,SACEpD,KAAK,SACLkC,MAAM,iBACNiC,UAAU,8BAxFFZ,aCDpByD,EAAS,SAAA9B,GAAkB,IAAf+B,EAAe/B,EAAf+B,SAChB,OACE9D,EAAAb,EAAAc,cAAA,OAAKe,UAAU,2DACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMuC,KAAK,IAAI/C,UAAU,gBACtB8C,GAEH9D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,sBACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,IAAIT,UAAU,YACrBhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADf,UAIFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,eAAeT,UAAU,YAChChB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADf,SAIFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,SAAST,UAAU,YAC1BhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,oBADf,gBAWd6C,EAAOtB,aAAe,CAAEuB,SAAU,UAInBD,QC3BAG,EAVD,WACZ,OACEhE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aAAd,yBACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,iCACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,kBAAb,mBCOSiD,EAZE,WACf,OACEjE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aACX,IACDhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,QAFF,kBAIAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,qCC0BSkD,6MAhCbvH,MAAQ,CACNwH,MAAO,GACPC,KAAM,uFAGY,IAAAzD,EAAA5C,KAClBsG,MAAM,gDACHlB,KAAK,SAAAmB,GAAQ,OAAIA,EAASC,SAC1BpB,KAAK,SAAArD,GAAI,OAAIa,EAAKhC,SAAS,CAAEwF,MAAOrE,EAAKqE,MAAOC,KAAMtE,EAAKsE,0CAgB9D,OACEpE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,0BA3BWG,aCoCJoE,gMAtBX,OACExE,EAAAb,EAAAc,cAACwE,EAAD,KACEzE,EAAAb,EAAAc,cAACyE,EAAA,EAAD,KACE1E,EAAAb,EAAAc,cAAA,OAAKe,UAAU,OACbhB,EAAAb,EAAAc,cAAC0E,EAAD,CAAQb,SAAS,oBACjB9D,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,KACE5E,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrD,IACjC3B,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAWxC,IAC5CxC,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,OAAK,EAACC,UAAWxB,IACjDxD,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,UAAWhB,IACtChE,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWd,IACrClE,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOG,UAAWf,gBAdhB7D,cCFE6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2DCbN4B,IAASC,OAAOtF,EAAAb,EAAAc,cAACsF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,KAAK,SAAA0C,GACjCA,EAAaC","file":"static/js/main.1b52291f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"delete_contact\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.id)\r\n      };\r\n    case \"add_contact\":\r\n      const newState = { ...state };\r\n      newState.contacts = [...newState.contacts, action.newContact];\r\n      return newState;\r\n    case \"update_contact\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   axios\r\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\r\n  //     .then(res => this.setState({ contacts: res.data }));\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = { showContactInfo: false };\r\n\r\n  onDeleteClick = () => {\r\n    console.log(\"deleting\");\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {value => (\r\n          <div className=\"card card-body mb-3\">\r\n            <h4>\r\n              {name}{\" \"}\r\n              <i\r\n                onClick={() =>\r\n                  this.setState(prevState => ({\r\n                    showContactInfo: !prevState.showContactInfo\r\n                  }))\r\n                }\r\n                className=\"fas fa-sort-down\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n              <i\r\n                className=\"fas fa-times\"\r\n                style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                onClick={async () => {\r\n                  await axios.delete(\r\n                    `https://jsonplaceholder.typicode.com/users/${id}`\r\n                  );\r\n                  value.dispatch({ type: \"delete_contact\", id });\r\n                }}\r\n                // onClick={() => {\r\n                //   axios\r\n                //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n                //     .then(() => value.dispatch({ type: \"delete_contact\", id }));\r\n                // }}\r\n              />\r\n              <Link to={`contact/edit/${id}`}>\r\n                <i\r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"black\",\r\n                    marginRight: \"1rem\"\r\n                  }}\r\n                />\r\n              </Link>\r\n            </h4>\r\n            {this.state.showContactInfo && (\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = { contact: PropTypes.object.isRequired };\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => (\r\n          <React.Fragment>\r\n            <h1 className=\"display-4 mb-2\">\r\n              <span className=\"text-danger\">Contact </span>List\r\n            </h1>\r\n            {value.contacts.map(contact => (\r\n              <Contact key={contact.id} contact={contact} />\r\n            ))}\r\n          </React.Fragment>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.defaultProps = { type: \"text\" };\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"./../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onInputChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onFormSubmit = (e, value) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name.trim() === \"\") {\r\n      this.setState({ errors: { name: \"name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email.trim() === \"\") {\r\n      this.setState({ errors: { email: \"email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone.trim() === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", { name, email, phone })\r\n      .then(res =>\r\n        value.dispatch({ type: \"add_contact\", newContact: res.data })\r\n      );\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => (\r\n          <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Add Contact</div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={e => this.onFormSubmit(e, value)}>\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"enter name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onInputChange}\r\n                  error={this.state.errors.name}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onInputChange}\r\n                  error={this.state.errors.email}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"enter phone\"\r\n                  value={this.state.phone}\r\n                  onChange={this.onInputChange}\r\n                  error={this.state.errors.phone}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Add Contact\"\r\n                  className=\"btn btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"./../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    console.log(res);\r\n    const { name, email, phone } = res.data;\r\n    this.setState({ name, email, phone });\r\n  }\r\n\r\n  onInputChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onFormSubmit = async (e, value) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    if (name.trim() === \"\") {\r\n      this.setState({ errors: { name: \"name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email.trim() === \"\") {\r\n      this.setState({ errors: { email: \"email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone.trim() === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      { name, email, phone }\r\n    );\r\n\r\n    value.dispatch({ type: \"update_contact\", payload: res.data });\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => (\r\n          <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Edit Contact</div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={e => this.onFormSubmit(e, value)}>\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"enter name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onInputChange}\r\n                  error={this.state.errors.name}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onInputChange}\r\n                  error={this.state.errors.email}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"enter phone\"\r\n                  value={this.state.phone}\r\n                  onChange={this.onInputChange}\r\n                  error={this.state.errors.phone}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update Contact\"\r\n                  className=\"btn btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ branding }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = { branding: \"My App\" };\r\n\r\nHeader.propTypes = { branding: PropTypes.string.isRequired };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {\" \"}\r\n        <span className=\"text-danger\">404 </span>Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log(\"component will mount\");\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log(\"component will update\");\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log(\"component did update\");\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route path=\"/\" exact component={Contacts} />\n                <Route path=\"/contact/add\" exact component={AddContact} />\n                <Route path=\"/contact/edit/:id\" exact component={EditContact} />\n                <Route path=\"/about\" exact component={About} />\n                <Route path=\"/test\" exact component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}